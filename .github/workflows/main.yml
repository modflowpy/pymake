name: pymake continuous integration

on:
  push:
    branches: [ master ]
  pull_request:

jobs:

  pymake_lint:
    name: pymake linting
    runs-on: ubuntu-latest

    if: github.repository_owner == 'modflowpy'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - name: Install packages
        run: |
          pip install requests pydotplus appdirs numpy matplotlib
          pip install https://github.com/modflowpy/flopy/zipball/develop
          pip install pylint flake8 black

      - name: Run black
        run: black --check --line-length 79 ./pymake

      - name: Run flake8
        run: flake8 --count --show-source ./pymake

      - name: Run pylint
        run: pylint --jobs=0 --errors-only ./pymake

  pymakeCI-os-gcc:
    name: pymake CI on different OSs
    needs: pymake_lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      - name: Setup Graphviz
        if: runner.os == 'Linux'
        uses: ts-graphviz/setup-graphviz@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python packages
        run: |
          .github/common/install-python.sh

      - name: Setup symbolic link to gfortran on Linux
        if: runner.os == 'Linux'
        run: |
          sudo ln -fs /usr/bin/gfortran-10 /usr/local/bin/gfortran
          sudo ln -fs /usr/bin/gcc-10 /usr/local/bin/gcc
          sudo ln -fs /usr/bin/g++-10 /usr/local/bin/g++

      - name: Setup symbolic link to gfortran on macOS
        if: runner.os == 'macOS'
        run: |
          sudo ln -fs /usr/local/bin/gfortran-10 /usr/local/bin/gfortran
          sudo ln -fs /usr/local/bin/gcc-10 /usr/local/bin/gcc
          sudo ln -fs /usr/local/bin/g++-10 /usr/local/bin/g++

      - name: Print GNU compiler versions
        run: |
          gfortran --version
          gcc --version
          g++ --version

      - name: Download examples for pytest runs
        run: |
          .github/common/download-examples.sh

      - name: Run pytest
        run: |
          pytest -v --durations=0 --cov=pymake --cov-report=xml autotest/

      - name: Print coverage report before upload
        run: |
          coverage report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.15
        with:
          file: ./coverage.xml

  pymakeCI-gcc9:
    name: pymake CI with GCC-9
    needs: pymake_lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        gcc-version: [ 9, 8 ]
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      - name: Setup Graphviz
        if: runner.os == 'Linux'
        uses: ts-graphviz/setup-graphviz@v1

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python packages
        run: |
          .github/common/install-python.sh

      - name: Setup symbolic link to gfortran on Linux
        run: |
          sudo ln -fs /usr/bin/gfortran-${{ matrix.gcc-version }} /usr/local/bin/gfortran
          sudo ln -fs /usr/bin/gcc-${{ matrix.gcc-version }} /usr/local/bin/gcc
          sudo ln -fs /usr/bin/g++-${{ matrix.gcc-version }} /usr/local/bin/g++

      - name: Print GNU compiler versions
        run: |
          gfortran --version
          gcc --version
          g++ --version

      - name: Download examples for pytest runs
        run: |
          .github/common/download-examples.sh

      - name: Run pytest
        run: |
          pytest -v --durations=0 --cov=pymake --cov-report=xml autotest/

      - name: Print coverage report before upload
        run: |
          coverage report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.15
        with:
          file: ./coverage.xml

  pymakeCI-python:
    name: pymake CI with different python versions
    needs: pymake_lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7 ]
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python packages
        run: |
          .github/common/install-python.sh

      - name: Setup symbolic link to gfortran on Linux
        if: runner.os == 'Linux'
        run: |
          sudo ln -fs /usr/bin/gfortran-10 /usr/local/bin/gfortran
          sudo ln -fs /usr/bin/gcc-10 /usr/local/bin/gcc
          sudo ln -fs /usr/bin/g++-10 /usr/local/bin/g++

      - name: Print GNU compiler versions
        run: |
          gfortran --version
          gcc --version
          g++ --version

      - name: Download examples for pytest runs
        run: |
          .github/common/download-examples.sh

      - name: Run pytest
        run: |
          pytest -v --durations=0

  pymake_rtd:
    name: pymake rtd
    needs: pymakeCI-os-gcc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      - name: Trigger RTDs build
        if: github.ref == 'refs/heads/master'
        uses: dfm/rtds-action@v1.0.2
        with:
          webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
          webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
          commit_ref: ${{ github.ref }}
