[project]
name = "pymake"
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "linux-aarch64", "osx-arm64", "osx-64"]
version = "1.2.10.dev0"

[dependencies]
appdirs = "*"
codespell = "*"
coverage = "*"
filelock = "*"
flaky = "*"
flopy = "*"
matplotlib = "*"
meson = "1.3.0"
modflow-devtools = "*"
networkx = "*"
ninja = "*"
numpy = "*"
pip = "*"
pydotplus = "*"
pytest = "!=8.1.0"
pytest-benchmark = "*"
pytest-cov = "*"
pytest-dotenv = "*"
pytest-order = "*"
pytest-xdist = "*"
python = "3.9.*"
requests = "*"
ruff = "*"

[tasks]
postinstall = "pip install --no-build-isolation --no-deps --disable-pip-version-check -e ."

# format
check-lint = "ruff check ."
check-format = "ruff format . --check"
fix-style = "ruff check . --fix; ruff format ."

# build
test = "meson test --verbose --no-rebuild -C"

# test
download-examples = {cmd = "python ci_setup.py", cwd = "autotest"}
autotest = { cmd = "pytest -v -n auto --dist=loadfile -m='base or regression' --durations 0 --cov=pymake --cov-report=xml --keep-failed .failed", cwd = "autotest" }
autotest-base = { cmd = "pytest -v -n auto --dist=loadfile -m='base' --durations 0 --cov=pymake --cov-report=xml --keep-failed .failed", cwd = "autotest" }
autotest-Windows = { cmd = "pytest -v -m='base' --durations 0 --cov=pymake --cov-report=xml --basetemp=$RUNNER_TEMP/pytest_temp --keep-failed .failed", cwd = "autotest" }

# coverage report
coverage-report = { cmd = "coverage report", cwd = "autotest"}
